name: muse ci-cd
run-name: ${{ github.actor }} is testing on prod
on:
  push:
    branches:    
      - main
jobs:
  ci:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
          MYSQL_ROOT_PASSWORD: ""
          MYSQL_DATABASE: muse
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install client dependencies
        run: npm install
        working-directory: client

      - name: Run client tests
        run: npm test
        working-directory: client

      - name: Install server dependencies
        run: npm install
        working-directory: server

      - name: Wait for MySQL to be ready
        run: |
          until mysqladmin ping -h"127.0.0.1" --silent; do
            echo 'Waiting for MySQL to be ready...'
            sleep 1
          done

      - name: Import database
        run: mysql --user=root --password="" --host=127.0.0.1 muse < ./database/muse.sql

      - name: Run server tests
        run: npm test
        working-directory: server
        env:
          EC2_HOST: 127.0.0.1
          DB_USER: root
          DB_PWD: ""
          DB_DB: "muse"
          SALT: 10

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DH_USERNAME }}
          password: ${{ secrets.DH_TOKEN }}

      - name: Build & Push React with Docker
        run: |
          docker image build -t ${{ secrets.DH_USERNAME }}/muse-react:latest .
          docker push ${{ secrets.DH_USERNAME }}/muse-react:latest
        working-directory: client

      - name: Build & Push Express with Docker
        run: |
          docker image build -t ${{ secrets.DH_USERNAME }}/muse-server:latest .
          docker push ${{ secrets.DH_USERNAME }}/muse-server:latest
        working-directory: server

      - name: Build & Push Mysql with Docker
        run: |
          docker image build -t ${{ secrets.DH_USERNAME }}/muse-mysql:latest .
          docker push ${{ secrets.DH_USERNAME }}/muse-mysql:latest
        working-directory: database

  cd:
    needs: [ci]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check if directory exists on EC2
        uses: appleboy/ssh-action@master
        id: check-dir
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            if [ -d "/muse/docker" ]; then
              echo "Directory already exists."
              exit 1
            else
              echo "Directory does not exist."
            fi
  
      - name: Create directory if it doesn't exist
        if: steps.check-dir.outcome == 'success'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            mkdir -p /muse/docker

      - name: Copy Docker Compose file to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: docker/docker-compose.yml
          target: /muse/docker/docker-compose.yml

      - name: SSH into EC2 and update Docker Compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            cd /muse/docker
            docker-compose down
            docker-compose build
            docker-compose up -d

